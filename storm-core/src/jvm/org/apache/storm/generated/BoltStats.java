/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.storm.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-21")
public class BoltStats implements org.apache.thrift.TBase<BoltStats, BoltStats._Fields>, java.io.Serializable, Cloneable, Comparable<BoltStats> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("BoltStats");

  private static final org.apache.thrift.protocol.TField ACKED_FIELD_DESC = new org.apache.thrift.protocol.TField("acked", org.apache.thrift.protocol.TType.MAP, (short)1);
  private static final org.apache.thrift.protocol.TField FAILED_FIELD_DESC = new org.apache.thrift.protocol.TField("failed", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField PROCESS_MS_AVG_FIELD_DESC = new org.apache.thrift.protocol.TField("process_ms_avg", org.apache.thrift.protocol.TType.MAP, (short)3);
  private static final org.apache.thrift.protocol.TField EXECUTED_FIELD_DESC = new org.apache.thrift.protocol.TField("executed", org.apache.thrift.protocol.TType.MAP, (short)4);
  private static final org.apache.thrift.protocol.TField EXECUTE_MS_AVG_FIELD_DESC = new org.apache.thrift.protocol.TField("execute_ms_avg", org.apache.thrift.protocol.TType.MAP, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new BoltStatsStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new BoltStatsTupleSchemeFactory();

  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> acked; // required
  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> failed; // required
  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> process_ms_avg; // required
  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> executed; // required
  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> execute_ms_avg; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ACKED((short)1, "acked"),
    FAILED((short)2, "failed"),
    PROCESS_MS_AVG((short)3, "process_ms_avg"),
    EXECUTED((short)4, "executed"),
    EXECUTE_MS_AVG((short)5, "execute_ms_avg");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ACKED
          return ACKED;
        case 2: // FAILED
          return FAILED;
        case 3: // PROCESS_MS_AVG
          return PROCESS_MS_AVG;
        case 4: // EXECUTED
          return EXECUTED;
        case 5: // EXECUTE_MS_AVG
          return EXECUTE_MS_AVG;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ACKED, new org.apache.thrift.meta_data.FieldMetaData("acked", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GlobalStreamId.class), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)))));
    tmpMap.put(_Fields.FAILED, new org.apache.thrift.meta_data.FieldMetaData("failed", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GlobalStreamId.class), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)))));
    tmpMap.put(_Fields.PROCESS_MS_AVG, new org.apache.thrift.meta_data.FieldMetaData("process_ms_avg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GlobalStreamId.class), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)))));
    tmpMap.put(_Fields.EXECUTED, new org.apache.thrift.meta_data.FieldMetaData("executed", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GlobalStreamId.class), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)))));
    tmpMap.put(_Fields.EXECUTE_MS_AVG, new org.apache.thrift.meta_data.FieldMetaData("execute_ms_avg", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
                new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, GlobalStreamId.class), 
                new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.DOUBLE)))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(BoltStats.class, metaDataMap);
  }

  public BoltStats() {
  }

  public BoltStats(
    java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> acked,
    java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> failed,
    java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> process_ms_avg,
    java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> executed,
    java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> execute_ms_avg)
  {
    this();
    this.acked = acked;
    this.failed = failed;
    this.process_ms_avg = process_ms_avg;
    this.executed = executed;
    this.execute_ms_avg = execute_ms_avg;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public BoltStats(BoltStats other) {
    if (other.isSetAcked()) {
      java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> __this__acked = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(other.acked.size());
      for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> other_element : other.acked.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.Map<GlobalStreamId,java.lang.Long> other_element_value = other_element.getValue();

        java.lang.String __this__acked_copy_key = other_element_key;

        java.util.Map<GlobalStreamId,java.lang.Long> __this__acked_copy_value = new java.util.HashMap<GlobalStreamId,java.lang.Long>(other_element_value.size());
        for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> other_element_value_element : other_element_value.entrySet()) {

          GlobalStreamId other_element_value_element_key = other_element_value_element.getKey();
          java.lang.Long other_element_value_element_value = other_element_value_element.getValue();

          GlobalStreamId __this__acked_copy_value_copy_key = new GlobalStreamId(other_element_value_element_key);

          java.lang.Long __this__acked_copy_value_copy_value = other_element_value_element_value;

          __this__acked_copy_value.put(__this__acked_copy_value_copy_key, __this__acked_copy_value_copy_value);
        }

        __this__acked.put(__this__acked_copy_key, __this__acked_copy_value);
      }
      this.acked = __this__acked;
    }
    if (other.isSetFailed()) {
      java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> __this__failed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(other.failed.size());
      for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> other_element : other.failed.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.Map<GlobalStreamId,java.lang.Long> other_element_value = other_element.getValue();

        java.lang.String __this__failed_copy_key = other_element_key;

        java.util.Map<GlobalStreamId,java.lang.Long> __this__failed_copy_value = new java.util.HashMap<GlobalStreamId,java.lang.Long>(other_element_value.size());
        for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> other_element_value_element : other_element_value.entrySet()) {

          GlobalStreamId other_element_value_element_key = other_element_value_element.getKey();
          java.lang.Long other_element_value_element_value = other_element_value_element.getValue();

          GlobalStreamId __this__failed_copy_value_copy_key = new GlobalStreamId(other_element_value_element_key);

          java.lang.Long __this__failed_copy_value_copy_value = other_element_value_element_value;

          __this__failed_copy_value.put(__this__failed_copy_value_copy_key, __this__failed_copy_value_copy_value);
        }

        __this__failed.put(__this__failed_copy_key, __this__failed_copy_value);
      }
      this.failed = __this__failed;
    }
    if (other.isSetProcess_ms_avg()) {
      java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> __this__process_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>(other.process_ms_avg.size());
      for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Double>> other_element : other.process_ms_avg.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.Map<GlobalStreamId,java.lang.Double> other_element_value = other_element.getValue();

        java.lang.String __this__process_ms_avg_copy_key = other_element_key;

        java.util.Map<GlobalStreamId,java.lang.Double> __this__process_ms_avg_copy_value = new java.util.HashMap<GlobalStreamId,java.lang.Double>(other_element_value.size());
        for (java.util.Map.Entry<GlobalStreamId, java.lang.Double> other_element_value_element : other_element_value.entrySet()) {

          GlobalStreamId other_element_value_element_key = other_element_value_element.getKey();
          java.lang.Double other_element_value_element_value = other_element_value_element.getValue();

          GlobalStreamId __this__process_ms_avg_copy_value_copy_key = new GlobalStreamId(other_element_value_element_key);

          java.lang.Double __this__process_ms_avg_copy_value_copy_value = other_element_value_element_value;

          __this__process_ms_avg_copy_value.put(__this__process_ms_avg_copy_value_copy_key, __this__process_ms_avg_copy_value_copy_value);
        }

        __this__process_ms_avg.put(__this__process_ms_avg_copy_key, __this__process_ms_avg_copy_value);
      }
      this.process_ms_avg = __this__process_ms_avg;
    }
    if (other.isSetExecuted()) {
      java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> __this__executed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(other.executed.size());
      for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> other_element : other.executed.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.Map<GlobalStreamId,java.lang.Long> other_element_value = other_element.getValue();

        java.lang.String __this__executed_copy_key = other_element_key;

        java.util.Map<GlobalStreamId,java.lang.Long> __this__executed_copy_value = new java.util.HashMap<GlobalStreamId,java.lang.Long>(other_element_value.size());
        for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> other_element_value_element : other_element_value.entrySet()) {

          GlobalStreamId other_element_value_element_key = other_element_value_element.getKey();
          java.lang.Long other_element_value_element_value = other_element_value_element.getValue();

          GlobalStreamId __this__executed_copy_value_copy_key = new GlobalStreamId(other_element_value_element_key);

          java.lang.Long __this__executed_copy_value_copy_value = other_element_value_element_value;

          __this__executed_copy_value.put(__this__executed_copy_value_copy_key, __this__executed_copy_value_copy_value);
        }

        __this__executed.put(__this__executed_copy_key, __this__executed_copy_value);
      }
      this.executed = __this__executed;
    }
    if (other.isSetExecute_ms_avg()) {
      java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> __this__execute_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>(other.execute_ms_avg.size());
      for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Double>> other_element : other.execute_ms_avg.entrySet()) {

        java.lang.String other_element_key = other_element.getKey();
        java.util.Map<GlobalStreamId,java.lang.Double> other_element_value = other_element.getValue();

        java.lang.String __this__execute_ms_avg_copy_key = other_element_key;

        java.util.Map<GlobalStreamId,java.lang.Double> __this__execute_ms_avg_copy_value = new java.util.HashMap<GlobalStreamId,java.lang.Double>(other_element_value.size());
        for (java.util.Map.Entry<GlobalStreamId, java.lang.Double> other_element_value_element : other_element_value.entrySet()) {

          GlobalStreamId other_element_value_element_key = other_element_value_element.getKey();
          java.lang.Double other_element_value_element_value = other_element_value_element.getValue();

          GlobalStreamId __this__execute_ms_avg_copy_value_copy_key = new GlobalStreamId(other_element_value_element_key);

          java.lang.Double __this__execute_ms_avg_copy_value_copy_value = other_element_value_element_value;

          __this__execute_ms_avg_copy_value.put(__this__execute_ms_avg_copy_value_copy_key, __this__execute_ms_avg_copy_value_copy_value);
        }

        __this__execute_ms_avg.put(__this__execute_ms_avg_copy_key, __this__execute_ms_avg_copy_value);
      }
      this.execute_ms_avg = __this__execute_ms_avg;
    }
  }

  public BoltStats deepCopy() {
    return new BoltStats(this);
  }

  @Override
  public void clear() {
    this.acked = null;
    this.failed = null;
    this.process_ms_avg = null;
    this.executed = null;
    this.execute_ms_avg = null;
  }

  public int getAckedSize() {
    return (this.acked == null) ? 0 : this.acked.size();
  }

  public void putToAcked(java.lang.String key, java.util.Map<GlobalStreamId,java.lang.Long> val) {
    if (this.acked == null) {
      this.acked = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>();
    }
    this.acked.put(key, val);
  }

  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> getAcked() {
    return this.acked;
  }

  public BoltStats setAcked(java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> acked) {
    this.acked = acked;
    return this;
  }

  public void unsetAcked() {
    this.acked = null;
  }

  /** Returns true if field acked is set (has been assigned a value) and false otherwise */
  public boolean isSetAcked() {
    return this.acked != null;
  }

  public void setAckedIsSet(boolean value) {
    if (!value) {
      this.acked = null;
    }
  }

  public int getFailedSize() {
    return (this.failed == null) ? 0 : this.failed.size();
  }

  public void putToFailed(java.lang.String key, java.util.Map<GlobalStreamId,java.lang.Long> val) {
    if (this.failed == null) {
      this.failed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>();
    }
    this.failed.put(key, val);
  }

  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> getFailed() {
    return this.failed;
  }

  public BoltStats setFailed(java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> failed) {
    this.failed = failed;
    return this;
  }

  public void unsetFailed() {
    this.failed = null;
  }

  /** Returns true if field failed is set (has been assigned a value) and false otherwise */
  public boolean isSetFailed() {
    return this.failed != null;
  }

  public void setFailedIsSet(boolean value) {
    if (!value) {
      this.failed = null;
    }
  }

  public int getProcess_ms_avgSize() {
    return (this.process_ms_avg == null) ? 0 : this.process_ms_avg.size();
  }

  public void putToProcess_ms_avg(java.lang.String key, java.util.Map<GlobalStreamId,java.lang.Double> val) {
    if (this.process_ms_avg == null) {
      this.process_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>();
    }
    this.process_ms_avg.put(key, val);
  }

  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> getProcess_ms_avg() {
    return this.process_ms_avg;
  }

  public BoltStats setProcess_ms_avg(java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> process_ms_avg) {
    this.process_ms_avg = process_ms_avg;
    return this;
  }

  public void unsetProcess_ms_avg() {
    this.process_ms_avg = null;
  }

  /** Returns true if field process_ms_avg is set (has been assigned a value) and false otherwise */
  public boolean isSetProcess_ms_avg() {
    return this.process_ms_avg != null;
  }

  public void setProcess_ms_avgIsSet(boolean value) {
    if (!value) {
      this.process_ms_avg = null;
    }
  }

  public int getExecutedSize() {
    return (this.executed == null) ? 0 : this.executed.size();
  }

  public void putToExecuted(java.lang.String key, java.util.Map<GlobalStreamId,java.lang.Long> val) {
    if (this.executed == null) {
      this.executed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>();
    }
    this.executed.put(key, val);
  }

  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> getExecuted() {
    return this.executed;
  }

  public BoltStats setExecuted(java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>> executed) {
    this.executed = executed;
    return this;
  }

  public void unsetExecuted() {
    this.executed = null;
  }

  /** Returns true if field executed is set (has been assigned a value) and false otherwise */
  public boolean isSetExecuted() {
    return this.executed != null;
  }

  public void setExecutedIsSet(boolean value) {
    if (!value) {
      this.executed = null;
    }
  }

  public int getExecute_ms_avgSize() {
    return (this.execute_ms_avg == null) ? 0 : this.execute_ms_avg.size();
  }

  public void putToExecute_ms_avg(java.lang.String key, java.util.Map<GlobalStreamId,java.lang.Double> val) {
    if (this.execute_ms_avg == null) {
      this.execute_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>();
    }
    this.execute_ms_avg.put(key, val);
  }

  public java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> getExecute_ms_avg() {
    return this.execute_ms_avg;
  }

  public BoltStats setExecute_ms_avg(java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>> execute_ms_avg) {
    this.execute_ms_avg = execute_ms_avg;
    return this;
  }

  public void unsetExecute_ms_avg() {
    this.execute_ms_avg = null;
  }

  /** Returns true if field execute_ms_avg is set (has been assigned a value) and false otherwise */
  public boolean isSetExecute_ms_avg() {
    return this.execute_ms_avg != null;
  }

  public void setExecute_ms_avgIsSet(boolean value) {
    if (!value) {
      this.execute_ms_avg = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case ACKED:
      if (value == null) {
        unsetAcked();
      } else {
        setAcked((java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>)value);
      }
      break;

    case FAILED:
      if (value == null) {
        unsetFailed();
      } else {
        setFailed((java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>)value);
      }
      break;

    case PROCESS_MS_AVG:
      if (value == null) {
        unsetProcess_ms_avg();
      } else {
        setProcess_ms_avg((java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>)value);
      }
      break;

    case EXECUTED:
      if (value == null) {
        unsetExecuted();
      } else {
        setExecuted((java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>)value);
      }
      break;

    case EXECUTE_MS_AVG:
      if (value == null) {
        unsetExecute_ms_avg();
      } else {
        setExecute_ms_avg((java.util.Map<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ACKED:
      return getAcked();

    case FAILED:
      return getFailed();

    case PROCESS_MS_AVG:
      return getProcess_ms_avg();

    case EXECUTED:
      return getExecuted();

    case EXECUTE_MS_AVG:
      return getExecute_ms_avg();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ACKED:
      return isSetAcked();
    case FAILED:
      return isSetFailed();
    case PROCESS_MS_AVG:
      return isSetProcess_ms_avg();
    case EXECUTED:
      return isSetExecuted();
    case EXECUTE_MS_AVG:
      return isSetExecute_ms_avg();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof BoltStats)
      return this.equals((BoltStats)that);
    return false;
  }

  public boolean equals(BoltStats that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_acked = true && this.isSetAcked();
    boolean that_present_acked = true && that.isSetAcked();
    if (this_present_acked || that_present_acked) {
      if (!(this_present_acked && that_present_acked))
        return false;
      if (!this.acked.equals(that.acked))
        return false;
    }

    boolean this_present_failed = true && this.isSetFailed();
    boolean that_present_failed = true && that.isSetFailed();
    if (this_present_failed || that_present_failed) {
      if (!(this_present_failed && that_present_failed))
        return false;
      if (!this.failed.equals(that.failed))
        return false;
    }

    boolean this_present_process_ms_avg = true && this.isSetProcess_ms_avg();
    boolean that_present_process_ms_avg = true && that.isSetProcess_ms_avg();
    if (this_present_process_ms_avg || that_present_process_ms_avg) {
      if (!(this_present_process_ms_avg && that_present_process_ms_avg))
        return false;
      if (!this.process_ms_avg.equals(that.process_ms_avg))
        return false;
    }

    boolean this_present_executed = true && this.isSetExecuted();
    boolean that_present_executed = true && that.isSetExecuted();
    if (this_present_executed || that_present_executed) {
      if (!(this_present_executed && that_present_executed))
        return false;
      if (!this.executed.equals(that.executed))
        return false;
    }

    boolean this_present_execute_ms_avg = true && this.isSetExecute_ms_avg();
    boolean that_present_execute_ms_avg = true && that.isSetExecute_ms_avg();
    if (this_present_execute_ms_avg || that_present_execute_ms_avg) {
      if (!(this_present_execute_ms_avg && that_present_execute_ms_avg))
        return false;
      if (!this.execute_ms_avg.equals(that.execute_ms_avg))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAcked()) ? 131071 : 524287);
    if (isSetAcked())
      hashCode = hashCode * 8191 + acked.hashCode();

    hashCode = hashCode * 8191 + ((isSetFailed()) ? 131071 : 524287);
    if (isSetFailed())
      hashCode = hashCode * 8191 + failed.hashCode();

    hashCode = hashCode * 8191 + ((isSetProcess_ms_avg()) ? 131071 : 524287);
    if (isSetProcess_ms_avg())
      hashCode = hashCode * 8191 + process_ms_avg.hashCode();

    hashCode = hashCode * 8191 + ((isSetExecuted()) ? 131071 : 524287);
    if (isSetExecuted())
      hashCode = hashCode * 8191 + executed.hashCode();

    hashCode = hashCode * 8191 + ((isSetExecute_ms_avg()) ? 131071 : 524287);
    if (isSetExecute_ms_avg())
      hashCode = hashCode * 8191 + execute_ms_avg.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(BoltStats other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAcked()).compareTo(other.isSetAcked());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAcked()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.acked, other.acked);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFailed()).compareTo(other.isSetFailed());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFailed()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.failed, other.failed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetProcess_ms_avg()).compareTo(other.isSetProcess_ms_avg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProcess_ms_avg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.process_ms_avg, other.process_ms_avg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExecuted()).compareTo(other.isSetExecuted());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExecuted()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.executed, other.executed);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetExecute_ms_avg()).compareTo(other.isSetExecute_ms_avg());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExecute_ms_avg()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.execute_ms_avg, other.execute_ms_avg);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("BoltStats(");
    boolean first = true;

    sb.append("acked:");
    if (this.acked == null) {
      sb.append("null");
    } else {
      sb.append(this.acked);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("failed:");
    if (this.failed == null) {
      sb.append("null");
    } else {
      sb.append(this.failed);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("process_ms_avg:");
    if (this.process_ms_avg == null) {
      sb.append("null");
    } else {
      sb.append(this.process_ms_avg);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("executed:");
    if (this.executed == null) {
      sb.append("null");
    } else {
      sb.append(this.executed);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("execute_ms_avg:");
    if (this.execute_ms_avg == null) {
      sb.append("null");
    } else {
      sb.append(this.execute_ms_avg);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (acked == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'acked' was not present! Struct: " + toString());
    }
    if (failed == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'failed' was not present! Struct: " + toString());
    }
    if (process_ms_avg == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'process_ms_avg' was not present! Struct: " + toString());
    }
    if (executed == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'executed' was not present! Struct: " + toString());
    }
    if (execute_ms_avg == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'execute_ms_avg' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class BoltStatsStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BoltStatsStandardScheme getScheme() {
      return new BoltStatsStandardScheme();
    }
  }

  private static class BoltStatsStandardScheme extends org.apache.thrift.scheme.StandardScheme<BoltStats> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, BoltStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ACKED
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map126 = iprot.readMapBegin();
                struct.acked = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(2*_map126.size);
                java.lang.String _key127;
                java.util.Map<GlobalStreamId,java.lang.Long> _val128;
                for (int _i129 = 0; _i129 < _map126.size; ++_i129)
                {
                  _key127 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TMap _map130 = iprot.readMapBegin();
                    _val128 = new java.util.HashMap<GlobalStreamId,java.lang.Long>(2*_map130.size);
                    GlobalStreamId _key131;
                    long _val132;
                    for (int _i133 = 0; _i133 < _map130.size; ++_i133)
                    {
                      _key131 = new GlobalStreamId();
                      _key131.read(iprot);
                      _val132 = iprot.readI64();
                      _val128.put(_key131, _val132);
                    }
                    iprot.readMapEnd();
                  }
                  struct.acked.put(_key127, _val128);
                }
                iprot.readMapEnd();
              }
              struct.setAckedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FAILED
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map134 = iprot.readMapBegin();
                struct.failed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(2*_map134.size);
                java.lang.String _key135;
                java.util.Map<GlobalStreamId,java.lang.Long> _val136;
                for (int _i137 = 0; _i137 < _map134.size; ++_i137)
                {
                  _key135 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TMap _map138 = iprot.readMapBegin();
                    _val136 = new java.util.HashMap<GlobalStreamId,java.lang.Long>(2*_map138.size);
                    GlobalStreamId _key139;
                    long _val140;
                    for (int _i141 = 0; _i141 < _map138.size; ++_i141)
                    {
                      _key139 = new GlobalStreamId();
                      _key139.read(iprot);
                      _val140 = iprot.readI64();
                      _val136.put(_key139, _val140);
                    }
                    iprot.readMapEnd();
                  }
                  struct.failed.put(_key135, _val136);
                }
                iprot.readMapEnd();
              }
              struct.setFailedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PROCESS_MS_AVG
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map142 = iprot.readMapBegin();
                struct.process_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>(2*_map142.size);
                java.lang.String _key143;
                java.util.Map<GlobalStreamId,java.lang.Double> _val144;
                for (int _i145 = 0; _i145 < _map142.size; ++_i145)
                {
                  _key143 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TMap _map146 = iprot.readMapBegin();
                    _val144 = new java.util.HashMap<GlobalStreamId,java.lang.Double>(2*_map146.size);
                    GlobalStreamId _key147;
                    double _val148;
                    for (int _i149 = 0; _i149 < _map146.size; ++_i149)
                    {
                      _key147 = new GlobalStreamId();
                      _key147.read(iprot);
                      _val148 = iprot.readDouble();
                      _val144.put(_key147, _val148);
                    }
                    iprot.readMapEnd();
                  }
                  struct.process_ms_avg.put(_key143, _val144);
                }
                iprot.readMapEnd();
              }
              struct.setProcess_ms_avgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // EXECUTED
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map150 = iprot.readMapBegin();
                struct.executed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(2*_map150.size);
                java.lang.String _key151;
                java.util.Map<GlobalStreamId,java.lang.Long> _val152;
                for (int _i153 = 0; _i153 < _map150.size; ++_i153)
                {
                  _key151 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TMap _map154 = iprot.readMapBegin();
                    _val152 = new java.util.HashMap<GlobalStreamId,java.lang.Long>(2*_map154.size);
                    GlobalStreamId _key155;
                    long _val156;
                    for (int _i157 = 0; _i157 < _map154.size; ++_i157)
                    {
                      _key155 = new GlobalStreamId();
                      _key155.read(iprot);
                      _val156 = iprot.readI64();
                      _val152.put(_key155, _val156);
                    }
                    iprot.readMapEnd();
                  }
                  struct.executed.put(_key151, _val152);
                }
                iprot.readMapEnd();
              }
              struct.setExecutedIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EXECUTE_MS_AVG
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map158 = iprot.readMapBegin();
                struct.execute_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>(2*_map158.size);
                java.lang.String _key159;
                java.util.Map<GlobalStreamId,java.lang.Double> _val160;
                for (int _i161 = 0; _i161 < _map158.size; ++_i161)
                {
                  _key159 = iprot.readString();
                  {
                    org.apache.thrift.protocol.TMap _map162 = iprot.readMapBegin();
                    _val160 = new java.util.HashMap<GlobalStreamId,java.lang.Double>(2*_map162.size);
                    GlobalStreamId _key163;
                    double _val164;
                    for (int _i165 = 0; _i165 < _map162.size; ++_i165)
                    {
                      _key163 = new GlobalStreamId();
                      _key163.read(iprot);
                      _val164 = iprot.readDouble();
                      _val160.put(_key163, _val164);
                    }
                    iprot.readMapEnd();
                  }
                  struct.execute_ms_avg.put(_key159, _val160);
                }
                iprot.readMapEnd();
              }
              struct.setExecute_ms_avgIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, BoltStats struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.acked != null) {
        oprot.writeFieldBegin(ACKED_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, struct.acked.size()));
          for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> _iter166 : struct.acked.entrySet())
          {
            oprot.writeString(_iter166.getKey());
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, _iter166.getValue().size()));
              for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> _iter167 : _iter166.getValue().entrySet())
              {
                _iter167.getKey().write(oprot);
                oprot.writeI64(_iter167.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.failed != null) {
        oprot.writeFieldBegin(FAILED_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, struct.failed.size()));
          for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> _iter168 : struct.failed.entrySet())
          {
            oprot.writeString(_iter168.getKey());
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, _iter168.getValue().size()));
              for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> _iter169 : _iter168.getValue().entrySet())
              {
                _iter169.getKey().write(oprot);
                oprot.writeI64(_iter169.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.process_ms_avg != null) {
        oprot.writeFieldBegin(PROCESS_MS_AVG_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, struct.process_ms_avg.size()));
          for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Double>> _iter170 : struct.process_ms_avg.entrySet())
          {
            oprot.writeString(_iter170.getKey());
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.DOUBLE, _iter170.getValue().size()));
              for (java.util.Map.Entry<GlobalStreamId, java.lang.Double> _iter171 : _iter170.getValue().entrySet())
              {
                _iter171.getKey().write(oprot);
                oprot.writeDouble(_iter171.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.executed != null) {
        oprot.writeFieldBegin(EXECUTED_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, struct.executed.size()));
          for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> _iter172 : struct.executed.entrySet())
          {
            oprot.writeString(_iter172.getKey());
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, _iter172.getValue().size()));
              for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> _iter173 : _iter172.getValue().entrySet())
              {
                _iter173.getKey().write(oprot);
                oprot.writeI64(_iter173.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.execute_ms_avg != null) {
        oprot.writeFieldBegin(EXECUTE_MS_AVG_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, struct.execute_ms_avg.size()));
          for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Double>> _iter174 : struct.execute_ms_avg.entrySet())
          {
            oprot.writeString(_iter174.getKey());
            {
              oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.DOUBLE, _iter174.getValue().size()));
              for (java.util.Map.Entry<GlobalStreamId, java.lang.Double> _iter175 : _iter174.getValue().entrySet())
              {
                _iter175.getKey().write(oprot);
                oprot.writeDouble(_iter175.getValue());
              }
              oprot.writeMapEnd();
            }
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class BoltStatsTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public BoltStatsTupleScheme getScheme() {
      return new BoltStatsTupleScheme();
    }
  }

  private static class BoltStatsTupleScheme extends org.apache.thrift.scheme.TupleScheme<BoltStats> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, BoltStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        oprot.writeI32(struct.acked.size());
        for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> _iter176 : struct.acked.entrySet())
        {
          oprot.writeString(_iter176.getKey());
          {
            oprot.writeI32(_iter176.getValue().size());
            for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> _iter177 : _iter176.getValue().entrySet())
            {
              _iter177.getKey().write(oprot);
              oprot.writeI64(_iter177.getValue());
            }
          }
        }
      }
      {
        oprot.writeI32(struct.failed.size());
        for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> _iter178 : struct.failed.entrySet())
        {
          oprot.writeString(_iter178.getKey());
          {
            oprot.writeI32(_iter178.getValue().size());
            for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> _iter179 : _iter178.getValue().entrySet())
            {
              _iter179.getKey().write(oprot);
              oprot.writeI64(_iter179.getValue());
            }
          }
        }
      }
      {
        oprot.writeI32(struct.process_ms_avg.size());
        for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Double>> _iter180 : struct.process_ms_avg.entrySet())
        {
          oprot.writeString(_iter180.getKey());
          {
            oprot.writeI32(_iter180.getValue().size());
            for (java.util.Map.Entry<GlobalStreamId, java.lang.Double> _iter181 : _iter180.getValue().entrySet())
            {
              _iter181.getKey().write(oprot);
              oprot.writeDouble(_iter181.getValue());
            }
          }
        }
      }
      {
        oprot.writeI32(struct.executed.size());
        for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Long>> _iter182 : struct.executed.entrySet())
        {
          oprot.writeString(_iter182.getKey());
          {
            oprot.writeI32(_iter182.getValue().size());
            for (java.util.Map.Entry<GlobalStreamId, java.lang.Long> _iter183 : _iter182.getValue().entrySet())
            {
              _iter183.getKey().write(oprot);
              oprot.writeI64(_iter183.getValue());
            }
          }
        }
      }
      {
        oprot.writeI32(struct.execute_ms_avg.size());
        for (java.util.Map.Entry<java.lang.String, java.util.Map<GlobalStreamId,java.lang.Double>> _iter184 : struct.execute_ms_avg.entrySet())
        {
          oprot.writeString(_iter184.getKey());
          {
            oprot.writeI32(_iter184.getValue().size());
            for (java.util.Map.Entry<GlobalStreamId, java.lang.Double> _iter185 : _iter184.getValue().entrySet())
            {
              _iter185.getKey().write(oprot);
              oprot.writeDouble(_iter185.getValue());
            }
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, BoltStats struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      {
        org.apache.thrift.protocol.TMap _map186 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
        struct.acked = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(2*_map186.size);
        java.lang.String _key187;
        java.util.Map<GlobalStreamId,java.lang.Long> _val188;
        for (int _i189 = 0; _i189 < _map186.size; ++_i189)
        {
          _key187 = iprot.readString();
          {
            org.apache.thrift.protocol.TMap _map190 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, iprot.readI32());
            _val188 = new java.util.HashMap<GlobalStreamId,java.lang.Long>(2*_map190.size);
            GlobalStreamId _key191;
            long _val192;
            for (int _i193 = 0; _i193 < _map190.size; ++_i193)
            {
              _key191 = new GlobalStreamId();
              _key191.read(iprot);
              _val192 = iprot.readI64();
              _val188.put(_key191, _val192);
            }
          }
          struct.acked.put(_key187, _val188);
        }
      }
      struct.setAckedIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map194 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
        struct.failed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(2*_map194.size);
        java.lang.String _key195;
        java.util.Map<GlobalStreamId,java.lang.Long> _val196;
        for (int _i197 = 0; _i197 < _map194.size; ++_i197)
        {
          _key195 = iprot.readString();
          {
            org.apache.thrift.protocol.TMap _map198 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, iprot.readI32());
            _val196 = new java.util.HashMap<GlobalStreamId,java.lang.Long>(2*_map198.size);
            GlobalStreamId _key199;
            long _val200;
            for (int _i201 = 0; _i201 < _map198.size; ++_i201)
            {
              _key199 = new GlobalStreamId();
              _key199.read(iprot);
              _val200 = iprot.readI64();
              _val196.put(_key199, _val200);
            }
          }
          struct.failed.put(_key195, _val196);
        }
      }
      struct.setFailedIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map202 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
        struct.process_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>(2*_map202.size);
        java.lang.String _key203;
        java.util.Map<GlobalStreamId,java.lang.Double> _val204;
        for (int _i205 = 0; _i205 < _map202.size; ++_i205)
        {
          _key203 = iprot.readString();
          {
            org.apache.thrift.protocol.TMap _map206 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
            _val204 = new java.util.HashMap<GlobalStreamId,java.lang.Double>(2*_map206.size);
            GlobalStreamId _key207;
            double _val208;
            for (int _i209 = 0; _i209 < _map206.size; ++_i209)
            {
              _key207 = new GlobalStreamId();
              _key207.read(iprot);
              _val208 = iprot.readDouble();
              _val204.put(_key207, _val208);
            }
          }
          struct.process_ms_avg.put(_key203, _val204);
        }
      }
      struct.setProcess_ms_avgIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map210 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
        struct.executed = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Long>>(2*_map210.size);
        java.lang.String _key211;
        java.util.Map<GlobalStreamId,java.lang.Long> _val212;
        for (int _i213 = 0; _i213 < _map210.size; ++_i213)
        {
          _key211 = iprot.readString();
          {
            org.apache.thrift.protocol.TMap _map214 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.I64, iprot.readI32());
            _val212 = new java.util.HashMap<GlobalStreamId,java.lang.Long>(2*_map214.size);
            GlobalStreamId _key215;
            long _val216;
            for (int _i217 = 0; _i217 < _map214.size; ++_i217)
            {
              _key215 = new GlobalStreamId();
              _key215.read(iprot);
              _val216 = iprot.readI64();
              _val212.put(_key215, _val216);
            }
          }
          struct.executed.put(_key211, _val212);
        }
      }
      struct.setExecutedIsSet(true);
      {
        org.apache.thrift.protocol.TMap _map218 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.MAP, iprot.readI32());
        struct.execute_ms_avg = new java.util.HashMap<java.lang.String,java.util.Map<GlobalStreamId,java.lang.Double>>(2*_map218.size);
        java.lang.String _key219;
        java.util.Map<GlobalStreamId,java.lang.Double> _val220;
        for (int _i221 = 0; _i221 < _map218.size; ++_i221)
        {
          _key219 = iprot.readString();
          {
            org.apache.thrift.protocol.TMap _map222 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRUCT, org.apache.thrift.protocol.TType.DOUBLE, iprot.readI32());
            _val220 = new java.util.HashMap<GlobalStreamId,java.lang.Double>(2*_map222.size);
            GlobalStreamId _key223;
            double _val224;
            for (int _i225 = 0; _i225 < _map222.size; ++_i225)
            {
              _key223 = new GlobalStreamId();
              _key223.read(iprot);
              _val224 = iprot.readDouble();
              _val220.put(_key223, _val224);
            }
          }
          struct.execute_ms_avg.put(_key219, _val220);
        }
      }
      struct.setExecute_ms_avgIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

