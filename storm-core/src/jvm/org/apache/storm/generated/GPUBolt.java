/**
 * Autogenerated by Thrift Compiler (0.10.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.storm.generated;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.10.0)", date = "2017-08-21")
public class GPUBolt implements org.apache.thrift.TBase<GPUBolt, GPUBolt._Fields>, java.io.Serializable, Cloneable, Comparable<GPUBolt> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("GPUBolt");

  private static final org.apache.thrift.protocol.TField GPU_BOLT_OBJECT_FIELD_DESC = new org.apache.thrift.protocol.TField("gpu_bolt_object", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField COMMAN_FIELD_DESC = new org.apache.thrift.protocol.TField("comman", org.apache.thrift.protocol.TType.STRUCT, (short)2);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new GPUBoltStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new GPUBoltTupleSchemeFactory();

  public ComponentObject gpu_bolt_object; // required
  public ComponentCommon comman; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    GPU_BOLT_OBJECT((short)1, "gpu_bolt_object"),
    COMMAN((short)2, "comman");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // GPU_BOLT_OBJECT
          return GPU_BOLT_OBJECT;
        case 2: // COMMAN
          return COMMAN;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.GPU_BOLT_OBJECT, new org.apache.thrift.meta_data.FieldMetaData("gpu_bolt_object", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ComponentObject.class)));
    tmpMap.put(_Fields.COMMAN, new org.apache.thrift.meta_data.FieldMetaData("comman", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ComponentCommon.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(GPUBolt.class, metaDataMap);
  }

  public GPUBolt() {
  }

  public GPUBolt(
    ComponentObject gpu_bolt_object,
    ComponentCommon comman)
  {
    this();
    this.gpu_bolt_object = gpu_bolt_object;
    this.comman = comman;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public GPUBolt(GPUBolt other) {
    if (other.isSetGpu_bolt_object()) {
      this.gpu_bolt_object = new ComponentObject(other.gpu_bolt_object);
    }
    if (other.isSetComman()) {
      this.comman = new ComponentCommon(other.comman);
    }
  }

  public GPUBolt deepCopy() {
    return new GPUBolt(this);
  }

  @Override
  public void clear() {
    this.gpu_bolt_object = null;
    this.comman = null;
  }

  public ComponentObject getGpu_bolt_object() {
    return this.gpu_bolt_object;
  }

  public GPUBolt setGpu_bolt_object(ComponentObject gpu_bolt_object) {
    this.gpu_bolt_object = gpu_bolt_object;
    return this;
  }

  public void unsetGpu_bolt_object() {
    this.gpu_bolt_object = null;
  }

  /** Returns true if field gpu_bolt_object is set (has been assigned a value) and false otherwise */
  public boolean isSetGpu_bolt_object() {
    return this.gpu_bolt_object != null;
  }

  public void setGpu_bolt_objectIsSet(boolean value) {
    if (!value) {
      this.gpu_bolt_object = null;
    }
  }

  public ComponentCommon getComman() {
    return this.comman;
  }

  public GPUBolt setComman(ComponentCommon comman) {
    this.comman = comman;
    return this;
  }

  public void unsetComman() {
    this.comman = null;
  }

  /** Returns true if field comman is set (has been assigned a value) and false otherwise */
  public boolean isSetComman() {
    return this.comman != null;
  }

  public void setCommanIsSet(boolean value) {
    if (!value) {
      this.comman = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case GPU_BOLT_OBJECT:
      if (value == null) {
        unsetGpu_bolt_object();
      } else {
        setGpu_bolt_object((ComponentObject)value);
      }
      break;

    case COMMAN:
      if (value == null) {
        unsetComman();
      } else {
        setComman((ComponentCommon)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case GPU_BOLT_OBJECT:
      return getGpu_bolt_object();

    case COMMAN:
      return getComman();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case GPU_BOLT_OBJECT:
      return isSetGpu_bolt_object();
    case COMMAN:
      return isSetComman();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof GPUBolt)
      return this.equals((GPUBolt)that);
    return false;
  }

  public boolean equals(GPUBolt that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_gpu_bolt_object = true && this.isSetGpu_bolt_object();
    boolean that_present_gpu_bolt_object = true && that.isSetGpu_bolt_object();
    if (this_present_gpu_bolt_object || that_present_gpu_bolt_object) {
      if (!(this_present_gpu_bolt_object && that_present_gpu_bolt_object))
        return false;
      if (!this.gpu_bolt_object.equals(that.gpu_bolt_object))
        return false;
    }

    boolean this_present_comman = true && this.isSetComman();
    boolean that_present_comman = true && that.isSetComman();
    if (this_present_comman || that_present_comman) {
      if (!(this_present_comman && that_present_comman))
        return false;
      if (!this.comman.equals(that.comman))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetGpu_bolt_object()) ? 131071 : 524287);
    if (isSetGpu_bolt_object())
      hashCode = hashCode * 8191 + gpu_bolt_object.hashCode();

    hashCode = hashCode * 8191 + ((isSetComman()) ? 131071 : 524287);
    if (isSetComman())
      hashCode = hashCode * 8191 + comman.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(GPUBolt other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetGpu_bolt_object()).compareTo(other.isSetGpu_bolt_object());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGpu_bolt_object()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.gpu_bolt_object, other.gpu_bolt_object);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetComman()).compareTo(other.isSetComman());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComman()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comman, other.comman);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("GPUBolt(");
    boolean first = true;

    sb.append("gpu_bolt_object:");
    if (this.gpu_bolt_object == null) {
      sb.append("null");
    } else {
      sb.append(this.gpu_bolt_object);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("comman:");
    if (this.comman == null) {
      sb.append("null");
    } else {
      sb.append(this.comman);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (gpu_bolt_object == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'gpu_bolt_object' was not present! Struct: " + toString());
    }
    if (comman == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'comman' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
    if (comman != null) {
      comman.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class GPUBoltStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GPUBoltStandardScheme getScheme() {
      return new GPUBoltStandardScheme();
    }
  }

  private static class GPUBoltStandardScheme extends org.apache.thrift.scheme.StandardScheme<GPUBolt> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, GPUBolt struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // GPU_BOLT_OBJECT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.gpu_bolt_object = new ComponentObject();
              struct.gpu_bolt_object.read(iprot);
              struct.setGpu_bolt_objectIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // COMMAN
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.comman = new ComponentCommon();
              struct.comman.read(iprot);
              struct.setCommanIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, GPUBolt struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.gpu_bolt_object != null) {
        oprot.writeFieldBegin(GPU_BOLT_OBJECT_FIELD_DESC);
        struct.gpu_bolt_object.write(oprot);
        oprot.writeFieldEnd();
      }
      if (struct.comman != null) {
        oprot.writeFieldBegin(COMMAN_FIELD_DESC);
        struct.comman.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class GPUBoltTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public GPUBoltTupleScheme getScheme() {
      return new GPUBoltTupleScheme();
    }
  }

  private static class GPUBoltTupleScheme extends org.apache.thrift.scheme.TupleScheme<GPUBolt> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, GPUBolt struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.gpu_bolt_object.write(oprot);
      struct.comman.write(oprot);
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, GPUBolt struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.gpu_bolt_object = new ComponentObject();
      struct.gpu_bolt_object.read(iprot);
      struct.setGpu_bolt_objectIsSet(true);
      struct.comman = new ComponentCommon();
      struct.comman.read(iprot);
      struct.setCommanIsSet(true);
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

